2016年11月12日
后台部分到此完成，稳定版本V1.0生成。初始赋值0则可以自动完成所有的搜索工作。
~Exam_Search标识码
~1新增
~2搜索完成
~3增加到Student表


2016年10月14日
1.基本完成后台服务端的编写，相关代码测试通过，转入android学习。下一次更新不定。

2016年10月11日
1.完成习题搜索页面的抓取，可以抓取到ID、习题名和状态
#利用align='center'这个标签和其下的evenrow、oddrow定位对应位置
2.总工程实现整合
~输入指令执行程序
3.除成绩表以外各个表实现自动生成

2016年10月10日
1.python数据库部分代码完成
~错误代码0建立表失败（请检查是否已经有Students表存在）
2.添加配置文件conf.ini
~status标识码
~fun
~0/不存在 新建用户、分配权限、新建数据库、新建表，完成后登出
~1 新建表
~2 增加数据
~3 查找数据
~4 状态结束
———————数据库清理—————————
DROP DATABASE ScoreManagement;
DROP USER 'echo'@'%';
——————————————————————————

2016年10月9日
1.建立了个人git服务器管理代码
2.搭建数据库（配置文件中注意要注释掉bind-address）
3.python安装数据库（pip install pymysql）

2016年10月08日
1.开发计划初步确定
2.python3环境配置
#sudo apt-get install python3-bs4
#pip install html5lib
3.exam页面实现抓取题目总数

2016年10月09日
1.给定学号前缀的学号、姓名查询
2.数据库搭建
～mysql 10.30.19.143 echo echosun
～ScoreManagement

随便涂鸦的话
本系统分为三大部分，一是利用python进行类爬虫的网页捕捉分析，获取所需要的学生数据信息。二是利用mysql数据库，存储学生做题信息。三是利用Django在网页上呈现学生做题信息。各个部分紧密结合，充分体现了本系统前后端一体化的重要特性。本系统最大优点在于结合我校的OnlineJudge平台，充分挖掘其在培养学生编程兴趣、提高学生编程水平方面的重要价值。其次，由于对后台服务器的安全性考量，本系统采用纯用户的角度抓取网页数据，不破坏、不干扰网站的正常运行，通过对代码的优化，尽可能减少爬虫程序对网站后台的负担，本系统的抓取作业安排在网页流量较少的阶段进行，也保障了抓取的成功性和稳定性。